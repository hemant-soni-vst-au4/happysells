{"ast":null,"code":"var _jsxFileName = \"/home/hemant/git/happysells/frontend/src/core/Checkout.js\";\nimport React, { useState, useEffect } from 'react'; // eslint-disable-next-line\n\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers'; // eslint-disable-next-line\n\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({\n  products,\n  setRun = f => f,\n  run = undefined\n}) => {\n  const [data, setData] = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: '',\n    instance: {},\n    address: ''\n  });\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n        setData({ ...data,\n          error: data.error\n        });\n      } else {\n        console.log(data);\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleAddress = event => {\n    setData({ ...data,\n      address: event.target.value\n    });\n  };\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, showDropIn()) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Sign in to checkout\"));\n  };\n\n  let deliveryAddress = data.address;\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce; // eslint-disable-next-line\n\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        console.log(response); // empty cart\n        // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: deliveryAddress\n        };\n        createOrder(userId, token, createOrderData).then(response => {\n          emptyCart(() => {\n            setRun(!run); // run useEffect in parent Cart\n\n            console.log('payment success and empty cart');\n            setData({\n              loading: false,\n              success: true\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n          setData({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData({ ...data,\n        error: error.message\n      });\n    });\n  };\n\n  const showDropIn = () => /*#__PURE__*/React.createElement(\"div\", {\n    onBlur: () => setData({ ...data,\n      error: ''\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }\n  }, data.clientToken !== null && products.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"gorm-group mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Delivery address:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: handleAddress,\n    className: \"form-control\",\n    value: data.address,\n    placeholder: \"Type your delivery address here...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken // paypal: {\n      //     flow: 'vault'\n      // }\n\n    },\n    onInstance: instance => data.instance = instance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"Pay\")) : null);\n\n  const showError = error => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, error);\n\n  const showSuccess = success => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? '' : 'none'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, \"Thanks! Your payment was successful!\");\n\n  const showLoading = loading => loading && /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 47\n    }\n  }, \"Loading...\");\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Total: \\u20B9 \", getTotal()), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["/home/hemant/git/happysells/frontend/src/core/Checkout.js"],"names":["React","useState","useEffect","getProducts","getBraintreeClientToken","processPayment","createOrder","emptyCart","Card","isAuthenticated","Link","DropIn","Checkout","products","setRun","f","run","undefined","data","setData","loading","success","clientToken","error","instance","address","userId","user","_id","token","getToken","then","console","log","handleAddress","event","target","value","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","deliveryAddress","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","createOrderData","transaction_id","transaction","id","catch","message","length","authorization","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// eslint-disable-next-line\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\n// eslint-disable-next-line\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        // eslint-disable-next-line\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // empty cart\n                        // create order\n\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            // paypal: {\n                            //     flow: 'vault'\n                            // }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ₹ {getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n"]},"metadata":{},"sourceType":"module"}