{"ast":null,"code":"var _jsxFileName = \"/home/hemant/git/happysells/frontend/src/user/Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({\n  match\n}) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: false,\n    success: false\n  });\n  const {\n    token\n  } = isAuthenticated();\n  const {\n    name,\n    email,\n    password,\n    success\n  } = values;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: true\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = name => e => {\n    setValues({ ...values,\n      error: false,\n      [name]: e.target.value\n    });\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        console.lgo(data.error);\n      } else {\n        updateUser(data, () => {\n          setValues({ ...values,\n            name: data.name,\n            email: data.email,\n            success: true\n          });\n        });\n      }\n    });\n  };\n\n  const redirectUser = success => {\n    if (success) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/user/dashboard\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  const profileUpdate = (name, email, password) => /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange(\"name\"),\n    className: \"form-control\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleChange(\"email\"),\n    className: \"form-control\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    onChange: handleChange(\"password\"),\n    className: \"form-control\",\n    value: password,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Submit\"));\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success));\n};\n\nexport default Profile;","map":{"version":3,"sources":["/home/hemant/git/happysells/frontend/src/user/Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Redirect","read","update","updateUser","Profile","match","values","setValues","name","email","password","error","success","token","init","userId","then","data","params","handleChange","e","target","value","clickSubmit","preventDefault","console","lgo","redirectUser","profileUpdate"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,WAAzC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC;AACjCY,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,KAAK,EAAE,KAJ0B;AAKjCC,IAAAA,OAAO,EAAE;AALwB,GAAD,CAApC;AAQA,QAAM;AAAEC,IAAAA;AAAF,MAAYd,eAAe,EAAjC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBE,IAAAA;AAAzB,MAAqCN,MAA3C;;AAEA,QAAMQ,IAAI,GAAGC,MAAM,IAAI;AACnB;AACAd,IAAAA,IAAI,CAACc,MAAD,EAASF,KAAT,CAAJ,CAAoBG,IAApB,CAAyBC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACN,KAAT,EAAgB;AACZJ,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaK,UAAAA,KAAK,EAAE;AAApB,SAAD,CAAT;AACH,OAFD,MAEO;AACHJ,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaE,UAAAA,IAAI,EAAES,IAAI,CAACT,IAAxB;AAA8BC,UAAAA,KAAK,EAAEQ,IAAI,CAACR;AAA1C,SAAD,CAAT;AACH;AACJ,KAND;AAOH,GATD;;AAWAZ,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,IAAI,CAACT,KAAK,CAACa,MAAN,CAAaH,MAAd,CAAJ,CADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,QAAMI,YAAY,GAAGX,IAAI,IAAIY,CAAC,IAAI;AAC9Bb,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaK,MAAAA,KAAK,EAAE,KAApB;AAA2B,OAACH,IAAD,GAAQY,CAAC,CAACC,MAAF,CAASC;AAA5C,KAAD,CAAT;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACI,cAAF;AACAtB,IAAAA,MAAM,CAACG,KAAK,CAACa,MAAN,CAAaH,MAAd,EAAsBF,KAAtB,EAA6B;AAAEL,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA7B,CAAN,CAA8DM,IAA9D,CACIC,IAAI,IAAI;AACJ,UAAIA,IAAI,CAACN,KAAT,EAAgB;AACZc,QAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACN,KAAjB;AACH,OAFD,MAEO;AACHR,QAAAA,UAAU,CAACc,IAAD,EAAO,MAAM;AACnBV,UAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAENE,YAAAA,IAAI,EAAES,IAAI,CAACT,IAFL;AAGNC,YAAAA,KAAK,EAAEQ,IAAI,CAACR,KAHN;AAING,YAAAA,OAAO,EAAE;AAJH,WAAD,CAAT;AAMH,SAPS,CAAV;AAQH;AACJ,KAdL;AAgBH,GAlBD;;AAoBA,QAAMe,YAAY,GAAGf,OAAO,IAAI;AAC5B,QAAIA,OAAJ,EAAa;AACT,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAJD;;AAMA,QAAMgB,aAAa,GAAG,CAACpB,IAAD,EAAOC,KAAP,EAAcC,QAAd,kBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAES,YAAY,CAAC,MAAD,CAF1B;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,KAAK,EAAEX,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,eAUI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,QAAQ,EAAEW,YAAY,CAAC,OAAD,CAF1B;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,KAAK,EAAEV,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,eAmBI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,QAAQ,EAAEU,YAAY,CAAC,UAAD,CAF1B;AAGI,IAAA,SAAS,EAAC,cAHd;AAII,IAAA,KAAK,EAAET,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAnBJ,eA6BI;AAAQ,IAAA,OAAO,EAAEa,WAAjB;AAA8B,IAAA,SAAS,EAAC,iBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BJ,CADJ;;AAoCA,sBACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,WAAW,EAAC,qBAFhB;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALJ,EAMKK,aAAa,CAACpB,IAAD,EAAOC,KAAP,EAAcC,QAAd,CANlB,EAOKiB,YAAY,CAACf,OAAD,CAPjB,CADJ;AAWH,CAzGD;;AA2GA,eAAeR,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password }).then(\n            data => {\n                if (data.error) {\n                    console.lgo(data.error);\n                } else {\n                    updateUser(data, () => {\n                        setValues({\n                            ...values,\n                            name: data.name,\n                            email: data.email,\n                            success: true\n                        });\n                    });\n                }\n            }\n        );\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/user/dashboard\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input\n                    type=\"text\"\n                    onChange={handleChange(\"name\")}\n                    className=\"form-control\"\n                    value={name}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input\n                    type=\"email\"\n                    onChange={handleChange(\"email\")}\n                    className=\"form-control\"\n                    value={email}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input\n                    type=\"password\"\n                    onChange={handleChange(\"password\")}\n                    className=\"form-control\"\n                    value={password}\n                />\n            </div>\n\n            <button onClick={clickSubmit} className=\"btn btn-primary\">\n                Submit\n            </button>\n        </form>\n    );\n\n    return (\n        <Layout\n            title=\"Profile\"\n            description=\"Update your profile\"\n            className=\"container-fluid\"\n        >\n            <h2 className=\"mb-4\">Profile update</h2>\n            {profileUpdate(name, email, password)}\n            {redirectUser(success)}\n        </Layout>\n    );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}