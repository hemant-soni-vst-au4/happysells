{"ast":null,"code":"var _jsxFileName = \"/home/hemant/git/happysells/frontend/src/auth/PrivateRoute.js\";\n// eslint-disable-next-line\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n  render: props => isAuthenticated() ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: \"/signin\",\n      state: {\n        from: props.location\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}));\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/home/hemant/git/happysells/frontend/src/auth/PrivateRoute.js"],"names":["React","Component","Route","Redirect","isAuthenticated","PrivateRoute","component","rest","props","pathname","state","from","location"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,SAAhC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEL,SAAb;AAAwB,KAAGM;AAA3B,CAAD,kBACjB,oBAAC,KAAD,oBACQA,IADR;AAEI,EAAA,MAAM,EAAEC,KAAK,IACTJ,eAAe,kBACX,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADW,gBAGX,oBAAC,QAAD;AACI,IAAA,EAAE,EAAE;AACAC,MAAAA,QAAQ,EAAE,SADV;AAEAC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFP,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADJ;;AAkBA,eAAeP,YAAf","sourcesContent":["// eslint-disable-next-line\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}